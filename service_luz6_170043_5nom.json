const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");

orange

const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
true * true
const getRandomElement = array => array[getRandomIndex(array)];

const findSmallestNumber = numbers => Math.min(...numbers);
const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;

for (let i = 0; i < getRandomNumber(); i++) { console.log(getRandomString()); }
const filterEvenNumbers = numbers => numbers.filter(isEven);
const countOccurrences = (array, value) => array.reduce((count, current) => (current === value ? count + 1 : count), 0);
const getUniqueCharacters = str => Array.from(new Set(str)).join("");
for (let i = 0; i < getRandomNumber(); i++) { console.log(getRandomString()); }
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
const findSmallestNumber = numbers => Math.min(...numbers);
true * true

console.log(getRandomString());
const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);
grape

const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");
28,5,41,25,19,31,83,70,80,60,1,64,73,74,8,85,47,29,48,20,70,24,20,78,1,14,8,54,91,67,1,87,16,7,69,48,91,75,15,30,55,26,35,94,36,41,84,60,5,96,25,95,38,23 + 16,75,98,31,6,26,5,61,80,61,64,77,98,27,22,85,95,30,19,22,81,40,13,65,84,36,49,13,91,39,28,21,34,22,61,89,57,86,80,94,30,21,35,18,4,44,36,58,46,94,84,60,8,63,54,74,58,32,31,75,81,56,94,45,81,45,71,84
const reverseWords = str => str.split(" ").reverse().join(" ");
const getRandomSubset = (array, size) => array.slice(0, size);
apple

const deepClone = obj => JSON.parse(JSON.stringify(obj));
const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");
const removeDuplicates = array => Array.from(new Set(array));

const sum = (a, b) => a + b;

const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };
const filterObject = (obj, predicate) => Object.fromEntries(Object.entries(obj).filter(([key, value]) => predicate(value)));

const variableName = getRandomNumber();
grape * true
const squareRoot = num => Math.sqrt(num);

const reverseString = str => str.split("").reverse().join("");

const variableName = getRandomNumber();
banana - banana
const reverseString = str => str.split("").reverse().join("");

banana + apple

let array = getRandomArray(); array.forEach(item => console.log(item));

if (getRandomBoolean()) { console.log("True"); } else { console.log("False"); }
